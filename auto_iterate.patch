diff --git a/liblinphone/wrappers/java/classes/org/linphone/core/tools/service/CoreManager.java b/liblinphone/wrappers/java/classes/org/linphone/core/tools/service/CoreManager.java
index ee0f21db3..5c91d5c66 100644
--- a/liblinphone/wrappers/java/classes/org/linphone/core/tools/service/CoreManager.java
+++ b/liblinphone/wrappers/java/classes/org/linphone/core/tools/service/CoreManager.java
@@ -268,14 +268,14 @@ public class CoreManager {
             mCore.setNativeRingingEnabled(false);
         }
 
-        if (mCore.isAutoIterateEnabled()) {
-            // Force the core.iterate() scheduling to a low value to ensure the Core will be ready as quickly as possible
-            Log.i("[Core Manager] Core is starting, scheduling core.iterate() every " + AUTO_ITERATE_TIMER_CORE_START_OR_PUSH_RECEIVED + "ms");
-            startAutoIterate(AUTO_ITERATE_TIMER_CORE_START_OR_PUSH_RECEIVED);
-            createTimerToResetAutoIterateSchedule();
-        } else {
+        // if (mCore.isAutoIterateEnabled()) {
+        //     // Force the core.iterate() scheduling to a low value to ensure the Core will be ready as quickly as possible
+        //     Log.i("[Core Manager] Core is starting, scheduling core.iterate() every " + AUTO_ITERATE_TIMER_CORE_START_OR_PUSH_RECEIVED + "ms");
+        //     startAutoIterate(AUTO_ITERATE_TIMER_CORE_START_OR_PUSH_RECEIVED);
+        //     createTimerToResetAutoIterateSchedule();
+        // } else {
             Log.w("[Core Manager] Auto core.iterate() isn't enabled, ensure you do it in your application!");
-        }
+        // }
 
         mListener = new CoreListenerStub() {
             @Override
@@ -401,22 +401,22 @@ public class CoreManager {
     }
 
     public void startAutoIterate() {
-        if (mCore == null) return;
+        // if (mCore == null) return;
         
-        if (mCore.isAutoIterateEnabled()) {
-            if (mTimer != null) {
-                Log.w("[Core Manager] core.iterate() scheduling is already active");
-                return;
-            }
-
-            if (mCore.isInBackground()) {
-                Log.i("[Core Manager] Start core.iterate() scheduling with background timer");
-                startAutoIterate(mCore.getAutoIterateBackgroundSchedule());
-            } else {
-                Log.i("[Core Manager] Start core.iterate() scheduling with foreground timer");
-                startAutoIterate(mCore.getAutoIterateForegroundSchedule());
-            }
-        }
+        // if (mCore.isAutoIterateEnabled()) {
+        //     if (mTimer != null) {
+        //         Log.w("[Core Manager] core.iterate() scheduling is already active");
+        //         return;
+        //     }
+
+        //     if (mCore.isInBackground()) {
+        //         Log.i("[Core Manager] Start core.iterate() scheduling with background timer");
+        //         startAutoIterate(mCore.getAutoIterateBackgroundSchedule());
+        //     } else {
+        //         Log.i("[Core Manager] Start core.iterate() scheduling with foreground timer");
+        //         startAutoIterate(mCore.getAutoIterateForegroundSchedule());
+        //     }
+        // }
     }
 
     private void stopTimerToResetAutoIterateSchedule() {
@@ -591,11 +591,11 @@ public class CoreManager {
                 Log.i("[Core Manager] App has entered background mode");
                 if (mCore != null) {
                     enterBackground(mCore.getNativePointer());
-                    if (mCore.isAutoIterateEnabled()) {
-                        stopTimerToResetAutoIterateSchedule();
-                        Log.i("[Core Manager] Restarting core.iterate() schedule with background timer");
-                        startAutoIterate(mCore.getAutoIterateBackgroundSchedule());
-                    }
+                    // if (mCore.isAutoIterateEnabled()) {
+                    //     stopTimerToResetAutoIterateSchedule();
+                    //     Log.i("[Core Manager] Restarting core.iterate() schedule with background timer");
+                    //     startAutoIterate(mCore.getAutoIterateBackgroundSchedule());
+                    // }
                 }
             }
         };
@@ -611,11 +611,11 @@ public class CoreManager {
                     enterForeground(mCore.getNativePointer());
                     updateOrientation(Display.DEFAULT_DISPLAY);
 
-                    if (mCore.isAutoIterateEnabled()) {
-                        stopTimerToResetAutoIterateSchedule();
-                        Log.i("[Core Manager] Restarting core.iterate() schedule with foreground timer");
-                        startAutoIterate(mCore.getAutoIterateForegroundSchedule());
-                    }
+                    // if (mCore.isAutoIterateEnabled()) {
+                    //     stopTimerToResetAutoIterateSchedule();
+                    //     Log.i("[Core Manager] Restarting core.iterate() schedule with foreground timer");
+                    //     startAutoIterate(mCore.getAutoIterateForegroundSchedule());
+                    // }
                 }
             }
         };
